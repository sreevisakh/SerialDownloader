{"version":3,"sources":["cheerio.js"],"names":["postOptions","method","headers","form","op","method_free","findEpisodeRangeInSeason","url","season","defered","defer","error","response","html","statusCode","$","load","count","parseInt","parents","siblings","children","length","resolve","range","reject","promise","exports","getResult","req","res","body","htmlPromises","downloadPromises","then","replace","each","id","name","findName","findSeason","slice","subUrl","push","getHtml","allSettled","gorillaUrls","data","value","downloadPromise","download","reduce","result","item","console","log","first","attr","split","Buffer","toString","e","$q","options","getVideoId","pattern","matches","exec"],"mappings":"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","file":"cheerio.js","sourcesContent":["/* global Buffer,process */\n\nimport cheerio from 'cheerio';\nimport request from 'request';\nimport _ from 'lodash';\nimport fs from 'fs';\nimport q from 'q';\nimport util from './util';\n\n\nvar postOptions = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/x-www-form-urlencoded',\n    },\n    form: {\n        op: 'download1',\n        method_free: 'Free+Download'\n    }\n};\n\nfunction findEpisodeRangeInSeason(url, season) {\n    var defered = q.defer();\n    request(url, function(error, response, html) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(html);\n            var count = $('span:contains(\"Season ' + parseInt(season) + '\")').parents('h2').siblings('ul').children('li').length;\n            defered.resolve(_.range(1, count, 1));\n        } else {\n            defered.reject('FindEpisode');\n        }\n    });\n    return defered.promise;\n}\n\nexports.getResult = function(req, res) {\n    var url = req.body.url,\n        season = req.body.season;\n    var htmlPromises = [];\n    var downloadPromises = [];\n    var defered = q.defer();\n    findEpisodeRangeInSeason(req.body.url, req.body.season).then(function(range) {\n        url = url.replace('/serie/', '/episode/');\n        url = url + '_s' + season + '_e${id}.html';\n        _.each(range, function(id) {\n            var name = util.findName(url) + ' S' + ('0' + util.findSeason(url)).slice(-2) + 'E' + ('0' + id).slice(-2);\n            var subUrl = url.replace('${id}', id);\n            htmlPromises.push(getHtml(subUrl, name));\n        });\n        return q.allSettled(htmlPromises);\n    }).then(function(gorillaUrls) {\n        _.each(gorillaUrls, function(data) {\n            if (data.value) {\n                var downloadPromise = download(data.value.url, data.value.name);\n                downloadPromises.push(downloadPromise);\n            }\n        });\n        return q.allSettled(downloadPromises);\n    }).then(function(response) {\n        response = _.reduce(response, function(result, item) {\n            return result + item.value;\n        }, '')\n        defered.resolve(response);\n    }, function(error) {\n        defered.reject('GetResult');\n    });\n    return defered.promise;\n};\n\n\nfunction getHtml(url, name) {\n    var defered = q.defer();\n    console.log('Getting HTML - ', url);\n    request(url, function(error, response, html) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(html);\n            try {\n                var url = $('a[title=\"gorillavid.in\"]').first().attr('href').split('=')[1];\n                url = new Buffer(url, 'base64').toString('ascii');\n            } catch (e) {\n                url = null;\n            }\n\n            defered.resolve({\n                url: url,\n                name: name\n            });\n        } else if (response.statusCode == 404) {\n            defered.resolve(null);\n        } else {\n            defered.reject(\"Get Html\");\n        }\n    });\n    return defered.promise;\n}\n\nfunction download(url, name) {\n    if (!url) return $q.reject('Url is empty');\n    console.log('Downloading ' + name);\n    var options = postOptions;\n    options.url = url;\n    options.form.id = util.getVideoId(url);\n    var defered = q.defer();\n    request(options, function(error, response, body) {\n        console.log('Downloading done:' + name);\n        if (error) {\n            defered.reject('Download' + url);\n        }\n        var pattern = /\"http(.*)(\\.flv|\\.mkv|\\.mp4)\"/;\n        var matches = pattern.exec(body);\n        if (matches && matches[0]) {\n            defered.resolve('<br><a download=\"' + name + '\" href=' + matches[0] + '>' + name + '</a>');\n        } else {\n            defered.resolve(\"\");\n        }\n    });\n    return defered.promise;\n}"],"sourceRoot":"/source/"}