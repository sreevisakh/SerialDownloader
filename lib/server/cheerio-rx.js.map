{"version":3,"sources":["cheerio-rx.js"],"names":["Rx","require","RxNode","request","_","cheerio","exports","getResult","req","res","result","fetchContent","url","body","season","flatMap","getEpisodeRange","map","formEpisodeUrl","bind","downloadHtml","getGorillaUrl","postToGorilla","getVideoUrl","prepareHtml","subscribe","data","error","send","JSON","stringify","params","console","log","args","slice","call","arguments","Observable","create","observer","response","onError","statusCode","onNext","name","onCompleted","fileName","episode","last","split","replace","concat","pattern","matches","exec","method","headers","form","op","method_free","id","$","load","first","attr","Buffer","toString","just","range","filter","text","parents","siblings","children","length"],"mappings":"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","file":"cheerio-rx.js","sourcesContent":["var Rx = require('rx');\nvar RxNode = require('rx-node');\nvar request = require('request');\nvar _ = require('lodash');\nvar cheerio = require('cheerio');\n\nexports.getResult = function(req, res) {\n    var result = '';\n    fetchContent({\n            url: req.body.url\n        }, req.body.season)\n        .flatMap(getEpisodeRange)\n        .map(formEpisodeUrl.bind(null, req.body.url, req.body.season))\n        .flatMap(downloadHtml)\n        .map(getGorillaUrl)\n        .flatMap(postToGorilla)\n        .map(getVideoUrl)\n        .flatMap(prepareHtml)\n        .subscribe(function(data) {\n            result += data;\n        }, function(error) {\n            res.send(JSON.stringify(error))\n        }, function() {\n            res.send(result);\n        });\n}\n\n\nfunction fetchContent(params) {\n    console.log(params.url);\n    var args = [].slice.call(arguments, 1)\n    return Rx.Observable.create(function(observer) {\n        request(params, function(error, response, body) {\n            if (error) {\n                observer.onError();\n            } else if (response.statusCode === 200) {\n                observer.onNext({\n                    name: params.name,\n                    response,\n                    body,\n                    args\n                });\n            } else {\n\n                observer.onError();\n            }\n            observer.onCompleted();\n        })\n    });\n};\n\nfunction prepareHtml({ url, name }) {\n    return `<a href=${url}>${name}</a><br>`;\n}\n\nfunction fileName(url, season, episode) {\n    return _.last(url.split('/')).replace('_', ' ').concat(' S' + ('0' + (season + '')).slice(-2) + 'E' + ('0' + (episode + '')).slice(-2))\n}\n\nfunction getVideoUrl(data) {\n    var pattern = /\"http(.*)(\\.flv|\\.mkv|\\.mp4)\"/;\n    var matches = pattern.exec(data.body);\n    if (matches && matches[0]) {\n        return { url: matches[0], name: data.name }\n    } else {\n        return null;\n    }\n}\n\nfunction postToGorilla({ url, name }) {\n    var params = {\n        name: name,\n        url: url,\n        method: 'POST',\n        headers: {\n            'content-type': 'application/x-www-form-urlencoded',\n        },\n        form: {\n            op: 'download1',\n            method_free: 'Free+Download',\n            id: _.last(url.split('/')),\n        }\n    }\n    return fetchContent(params)\n}\n\nfunction getGorillaUrl(data) {\n    try {\n        var $ = cheerio.load(data.body);\n        var url = $('a[title=\"gorillavid.in\"]').first().attr('href').split('=')[1]\n        return { url: new Buffer(url, 'base64').toString('ascii'), name: data.name };\n    } catch (error) {\n        return Rx.Observable.just(null);\n    }\n}\n\nfunction downloadHtml({ url, name }) {\n    return fetchContent({\n        url,\n        name\n    });\n}\n\nfunction formEpisodeUrl(url, season, episode) {\n    return { url: url.replace('/serie/', '/episode/').concat(`_s${season}_e${episode}.html`), name: fileName(url, season, episode) };\n}\n\nfunction getEpisodeRange(data) {\n    var $ = cheerio.load(data.body);\n    return _.range(1, ($('span').filter(function() {\n        return $(this).text() === `Season ${data.args[0]}`;\n    }).parents('h2').siblings('ul').children('li').length) + 1 || 0, 1);\n}"],"sourceRoot":"/source/"}