{"version":3,"sources":["../src/cheerio.js"],"names":[],"mappings":"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","file":"cheerio.js","sourcesContent":["/* global Buffer,process */\n\nimport cheerio from 'cheerio';\nimport request from 'request';\nimport _ from 'lodash';\nimport fs from 'fs';\nimport q from 'q';\nimport util from './util';\nimport Rx from 'rx';\nimport RxNode from 'rx-node';\n\n\nvar postOptions = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/x-www-form-urlencoded',\n    },\n    form: {\n        op: 'download1',\n        method_free: 'Free+Download'\n    }\n};\n\n\nfunction findEpisodeRangeInSeason(url, season) {\n    var defered = q.defer();\n    request(url, function(error, response, html) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(html);\n            var count = $('span:contains(\"Season ' + parseInt(season) + '\")').parents('h2').siblings('ul').children('li').length;\n            defered.resolve(_.range(1, count, 1));\n        } else {\n            defered.reject('FindEpisode');\n        }\n    });\n    return defered.promise;\n}\n\nexports.getResult = function(url, season) {\n    var htmlPromises = [];\n    var downloadPromises = [];\n    var defered = q.defer();\n    findEpisodeRangeInSeason(url, season).then(function(range) {\n        url = url.replace('/serie/', '/episode/');\n        url = url + '_s' + season + '_e${id}.html';\n        _.each(range, function(id) {\n            var name = util.findName(url) + \" S\" + (\"0\" + util.findSeason(url)).slice(-2) + \"E\" + (\"0\" + id).slice(-2);\n            var subUrl = url.replace('${id}', id);\n            htmlPromises.push(getHtml(subUrl, name));\n        });\n        return q.allSettled(htmlPromises);\n    }).then(function(gorillaUrls) {\n        _.each(gorillaUrls, function(data) {\n            if (data.value) {\n                var downloadPromise = download(data.value.url, data.value.name);\n                downloadPromises.push(downloadPromise);\n            }\n        });\n        return q.allSettled(downloadPromises);\n    }).then(function(response) {\n        response = _.reduce(response, function(result, item) {\n            return result + item.value;\n        }, '')\n        defered.resolve(response);\n    }, function(error) {\n        defered.reject('GetResult');\n    });\n    return defered.promise;\n};\n\n\nfunction getHtml(url, name) {\n    var defered = q.defer();\n    console.log('Getting HTML - ', url);\n    request(url, function(error, response, html) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(html);\n            var url = $('a[title=\"gorillavid.in\"]').first().attr('href').split('=')[1]\n            url = new Buffer(url, 'base64').toString('ascii');\n            defered.resolve({\n                url: url,\n                name: name\n            });\n        } else if (response.statusCode == 404) {\n            defered.resolve(null);\n        } else {\n            defered.reject(\"Get Html\");\n        }\n    });\n    return defered.promise;\n}\n\nfunction download(url, name) {\n    console.log('Downloading ' + name);\n    var options = postOptions;\n    options.url = url;\n    options.form.id = util.getVideoId(url);\n    var defered = q.defer();\n    request(options, function(error, response, body) {\n        if (error) {\n            defered.reject('Download' + url);\n        }\n        var pattern = /\"http(.*)(\\.flv|\\.mkv|\\.mp4)\"/;\n        var matches = pattern.exec(body);\n        if (matches && matches[0]) {\n            defered.resolve('<br><a download=\"' + name + '\" href=' + matches[0] + '>' + name + '</a>');\n        } else {\n            defered.resolve(\"\");\n        }\n    });\n    return defered.promise;\n}"]}